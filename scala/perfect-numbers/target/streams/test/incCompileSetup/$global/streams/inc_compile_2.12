format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/anicolaspp/exercism/scala/perfect-numbers/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.1
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/anicolaspp/exercism/scala/perfect-numbers/target/scala-2.12/test-classes/PerfectNumbersTest.class
binary dependencies:
4 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/anicolaspp/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/anicolaspp/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> /Users/anicolaspp/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
3 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> NumberType
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> NumberType$
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbers$
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbersTest
used names:
44 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <byname>
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <init>
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> <repeated>
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> A
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Abundant
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Any
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> AnyShouldWrapper
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Assertion
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> B
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> BeWord
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Deficient
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Either
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> FunSuite
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Int
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Left
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Matcher
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Matchers
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Nothing
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> NumberType
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Perfect
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbers
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> PerfectNumbersTest
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Position
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Predef
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Prettifier
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Right
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> String
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> T
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Tag
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> Unit
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> apply
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> be
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> classify
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> convertToAnyShouldWrapper
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> default
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> here
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> org
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> package
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scala
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scalactic
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> scalatest
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> should
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> source
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> test
product stamps:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/target/scala-2.12/test-classes/PerfectNumbersTest.class -> lastModified(1510464392000)
source stamps:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> hash(73dd76b4904aa5cd506263fd156c888e82463b78)
binary stamps:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar -> lastModified(1489567893000)
/Users/anicolaspp/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> lastModified(1480936165000)
/Users/anicolaspp/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/anicolaspp/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
4 items
/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar -> java.lang.String
/Users/anicolaspp/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.1.jar -> scala.Unit
/Users/anicolaspp/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.source.Position$
/Users/anicolaspp/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.Matchers
internal apis:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> 

external apis:
3 items
NumberType -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwQYk9BgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAgc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw9U9fS3QABm5vdGlmeXNxAH4ADP8xAUJ0AAR3YWl0c3EAfgAMtKnUBnQADSRhc0luc3RhbmNlT2ZzcQB+AAxlg0fpdAAMcHJvZHVjdEFyaXR5c3EAfgAMyyK/k3QABmVxdWFsc3NxAH4ADP9fj6N0AAxhc0luc3RhbmNlT2ZzcQB+AAxXUzjGdAAMc3luY2hyb25pemVkc3EAfgAM8eNAfHQAB1BlcmZlY3RzcQB+AAwSgnlKdAANJGlzSW5zdGFuY2VPZnNxAH4ADGU4bWJ0AAhjYW5FcXVhbHNxAH4ADK7pLwZ0AA1wcm9kdWN0UHJlZml4c3EAfgAMu418a3QACW5vdGlmeUFsbHNxAH4ADJAQGlR0AAxpc0luc3RhbmNlT2ZzcQB+AAzrhXpsdAACPT1zcQB+AAzFYJo6dAAFY2xvbmVzcQB+AAyqkcBrdAAGJGluaXQkc3EAfgAMYo97q3QACHRvU3RyaW5nc3EAfgAM6r9vlHQAAiE9c3EAfgAMMZHw9nQACURlZmljaWVudHNxAH4ADCxcGuR0AAhnZXRDbGFzc3NxAH4ADCzPPhh0AA5QZXJmZWN0TnVtYmVyc3NxAH4ADKKeQFR0AAJuZXNxAH4ADPWsf8x0AAhjbGFzc2lmeXNxAH4ADBRs5Yp0AAJlcXNxAH4ADEudGeV0AApOdW1iZXJUeXBlc3EAfgAMb9VKs3QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADEljxtR0AApjbGFzaWZ5U3Vtc3EAfgAMiD1YWXQACEFidW5kYW50c3EAfgAMCDHUWHQAAiMjc3EAfgAM00fJNXQACGZpbmFsaXplc3EAfgAMlfYfJ3QADnByb2R1Y3RFbGVtZW50c3EAfgAM19CKqXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AV3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgA3dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBuc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFdMAAlpbmhlcml0ZWRxAH4AV0wAB3BhcmVudHNxAH4AV3hxAH4Ac3NxAH4AbnVxAH4AUgAAAABzcQB+AG51cQB+AFIAAAAAc3EAfgBudXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBydAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgByc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCLdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCMc3EAfgB/dAADQW55c3EAfgCDc3EAfgCGdXEAfgCJAAAAAnNxAH4Ai3QABXNjYWxhcQB+AJJzcQB+AFRxAH4AYXVxAH4AYgAAAABzcQB+AGQJcQB+AD91cQB+AGYAAAAAfnEAfgBodAAFVHJhaXR1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSc3EAfgBUcQB+AGF1cQB+AGIAAAAAc3EAfgBkAHQACk51bWJlclR5cGV1cQB+AGYAAAAAcQB+AGp1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV+usOgrdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASi9Vc2Vycy9hbmljb2xhc3BwL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUq0LWGzCQmLCjZm3uUamgx/XlaGk=
NumberType$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwQYk9BgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAgc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw9U9fS3QABm5vdGlmeXNxAH4ADP8xAUJ0AAR3YWl0c3EAfgAMtKnUBnQADSRhc0luc3RhbmNlT2ZzcQB+AAxlg0fpdAAMcHJvZHVjdEFyaXR5c3EAfgAMyyK/k3QABmVxdWFsc3NxAH4ADP9fj6N0AAxhc0luc3RhbmNlT2ZzcQB+AAxXUzjGdAAMc3luY2hyb25pemVkc3EAfgAM8eNAfHQAB1BlcmZlY3RzcQB+AAwSgnlKdAANJGlzSW5zdGFuY2VPZnNxAH4ADGU4bWJ0AAhjYW5FcXVhbHNxAH4ADK7pLwZ0AA1wcm9kdWN0UHJlZml4c3EAfgAMu418a3QACW5vdGlmeUFsbHNxAH4ADJAQGlR0AAxpc0luc3RhbmNlT2ZzcQB+AAzrhXpsdAACPT1zcQB+AAzFYJo6dAAFY2xvbmVzcQB+AAyqkcBrdAAGJGluaXQkc3EAfgAMYo97q3QACHRvU3RyaW5nc3EAfgAM6r9vlHQAAiE9c3EAfgAMMZHw9nQACURlZmljaWVudHNxAH4ADCxcGuR0AAhnZXRDbGFzc3NxAH4ADCzPPhh0AA5QZXJmZWN0TnVtYmVyc3NxAH4ADKKeQFR0AAJuZXNxAH4ADPWsf8x0AAhjbGFzc2lmeXNxAH4ADBRs5Yp0AAJlcXNxAH4ADEudGeV0AApOdW1iZXJUeXBlc3EAfgAMb9VKs3QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADEljxtR0AApjbGFzaWZ5U3Vtc3EAfgAMiD1YWXQACEFidW5kYW50c3EAfgAMCDHUWHQAAiMjc3EAfgAM00fJNXQACGZpbmFsaXplc3EAfgAMlfYfJ3QADnByb2R1Y3RFbGVtZW50c3EAfgAM19CKqXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AV3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgA3dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBuc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFdMAAlpbmhlcml0ZWRxAH4AV0wAB3BhcmVudHNxAH4AV3hxAH4Ac3NxAH4AbnVxAH4AUgAAAABzcQB+AG51cQB+AFIAAAAAc3EAfgBudXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBydAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgByc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCLdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCMc3EAfgB/dAADQW55c3EAfgCDc3EAfgCGdXEAfgCJAAAAAnNxAH4Ai3QABXNjYWxhcQB+AJJzcQB+AFRxAH4AYXVxAH4AYgAAAABzcQB+AGQJcQB+AD91cQB+AGYAAAAAfnEAfgBodAAFVHJhaXR1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSc3EAfgBUcQB+AGF1cQB+AGIAAAAAc3EAfgBkAHQACk51bWJlclR5cGV1cQB+AGYAAAAAcQB+AGp1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV+usOgrdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASi9Vc2Vycy9hbmljb2xhc3BwL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUq0LWGzCQmLCjZm3uUamgx/XlaGk=
PerfectNumbers$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwQYk9BgAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAgc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw9U9fS3QABm5vdGlmeXNxAH4ADP8xAUJ0AAR3YWl0c3EAfgAMtKnUBnQADSRhc0luc3RhbmNlT2ZzcQB+AAxlg0fpdAAMcHJvZHVjdEFyaXR5c3EAfgAMyyK/k3QABmVxdWFsc3NxAH4ADP9fj6N0AAxhc0luc3RhbmNlT2ZzcQB+AAxXUzjGdAAMc3luY2hyb25pemVkc3EAfgAM8eNAfHQAB1BlcmZlY3RzcQB+AAwSgnlKdAANJGlzSW5zdGFuY2VPZnNxAH4ADGU4bWJ0AAhjYW5FcXVhbHNxAH4ADK7pLwZ0AA1wcm9kdWN0UHJlZml4c3EAfgAMu418a3QACW5vdGlmeUFsbHNxAH4ADJAQGlR0AAxpc0luc3RhbmNlT2ZzcQB+AAzrhXpsdAACPT1zcQB+AAzFYJo6dAAFY2xvbmVzcQB+AAyqkcBrdAAGJGluaXQkc3EAfgAMYo97q3QACHRvU3RyaW5nc3EAfgAM6r9vlHQAAiE9c3EAfgAMMZHw9nQACURlZmljaWVudHNxAH4ADCxcGuR0AAhnZXRDbGFzc3NxAH4ADCzPPhh0AA5QZXJmZWN0TnVtYmVyc3NxAH4ADKKeQFR0AAJuZXNxAH4ADPWsf8x0AAhjbGFzc2lmeXNxAH4ADBRs5Yp0AAJlcXNxAH4ADEudGeV0AApOdW1iZXJUeXBlc3EAfgAMb9VKs3QAD3Byb2R1Y3RJdGVyYXRvcnNxAH4ADEljxtR0AApjbGFzaWZ5U3Vtc3EAfgAMiD1YWXQACEFidW5kYW50c3EAfgAMCDHUWHQAAiMjc3EAfgAM00fJNXQACGZpbmFsaXplc3EAfgAMlfYfJ3QADnByb2R1Y3RFbGVtZW50c3EAfgAM19CKqXQACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAA3NyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AV3hyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgA3dXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBuc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AFdMAAlpbmhlcml0ZWRxAH4AV0wAB3BhcmVudHNxAH4AV3hxAH4Ac3NxAH4AbnVxAH4AUgAAAABzcQB+AG51cQB+AFIAAAAAc3EAfgBudXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBydAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgByc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgCLdAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCMc3EAfgB/dAADQW55c3EAfgCDc3EAfgCGdXEAfgCJAAAAAnNxAH4Ai3QABXNjYWxhcQB+AJJzcQB+AFRxAH4AYXVxAH4AYgAAAABzcQB+AGQJcQB+AD91cQB+AGYAAAAAfnEAfgBodAAFVHJhaXR1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSc3EAfgBUcQB+AGF1cQB+AGIAAAAAc3EAfgBkAHQACk51bWJlclR5cGV1cQB+AGYAAAAAcQB+AGp1cQB+AGwAAAAAc3EAfgBucQB+AHRzcQB+AG5zcQB+AHZzcQB+AG51cQB+AFIAAAAAc3EAfgBudXEAfgBSAAAAAHNxAH4AbnVxAH4AfQAAAAJzcQB+AH9xAH4AgnNxAH4Ag3NxAH4AhnVxAH4AiQAAAANzcQB+AItxAH4AjnNxAH4Ai3EAfgCQcQB+AJJzcQB+AH9xAH4AlHNxAH4Ag3NxAH4AhnVxAH4AiQAAAAJzcQB+AItxAH4AmXEAfgCSdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAV+usOgrdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASi9Vc2Vycy9hbmljb2xhc3BwL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUq0LWGzCQmLCjZm3uUamgx/XlaGk=
source infos:
1 items
/Users/anicolaspp/exercism/scala/perfect-numbers/src/test/scala/PerfectNumbersTest.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABX66w+7t1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATy9Vc2Vycy9hbmljb2xhc3BwL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABX66xcWl1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATy9Vc2Vycy9hbmljb2xhc3BwL2V4ZXJjaXNtL3NjYWxhL3BlcmZlY3QtbnVtYmVycy90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEv
